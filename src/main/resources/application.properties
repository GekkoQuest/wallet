# src/main/resources/application.properties - UPDATED for Render + Cloudflare

# Application Configuration
spring.application.name=wallet

# MongoDB Configuration
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
spring.data.mongodb.auto-index-creation=true

# Mail Configuration
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Session Configuration - CRITICAL for Render + Cloudflare
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
# Dynamic secure cookie setting based on environment
server.servlet.session.cookie.secure=${SESSION_COOKIE_SECURE:true}
server.servlet.session.cookie.same-site=${SESSION_COOKIE_SAME_SITE:lax}
server.servlet.session.tracking-modes=cookie
# Important: This helps with Cloudflare proxy
server.servlet.session.cookie.path=/
server.servlet.session.cookie.domain=${SESSION_COOKIE_DOMAIN:}

# Server Configuration for Render deployment
server.port=${PORT:8080}
# Trust Cloudflare proxy headers
server.tomcat.remoteip.remote-ip-header=CF-Connecting-IP
server.tomcat.remoteip.protocol-header=X-Forwarded-Proto
server.tomcat.remoteip.port-header=X-Forwarded-Port
# Cloudflare IP ranges (these are trusted proxies)
server.tomcat.remoteip.trusted-proxies=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22

# Security Configuration
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# Application Settings
app.name=${APP_NAME:Wallet}
app.support.email=${APP_SUPPORT_EMAIL:john@gekko.quest}

# Verification Settings
app.verification.code.length=6
app.verification.code.expiry.minutes=10
app.verification.max-attempts=5

# Rate Limiting
app.security.rate-limit.email-send.per-hour=10
app.security.rate-limit.email-send.per-minute=3
app.security.rate-limit.code-verify.per-hour=20
app.security.rate-limit.code-verify.per-minute=5

# Vault Settings
app.vault.max-passwords-per-user=1000
app.vault.max-password-name-length=100

# Security Settings
app.security.failed-attempts.max=5
app.security.account-lock.duration-minutes=30

# Cloudflare Configuration
app.cloudflare.enabled=${CLOUDFLARE_ENABLED:true}

# CORS Configuration - Environment specific
app.security.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://wallet.gekko.quest,https://*.onrender.com}
app.security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.security.cors.allowed-headers=*
app.security.cors.allow-credentials=true

# Logging Configuration
logging.level.quest.gekko.wallet=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.security.web.session=DEBUG
logging.level.org.apache.catalina.session=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Production vs Development settings
# In production (Render), these will be overridden by environment variables
spring.profiles.active=${SPRING_PROFILES_ACTIVE:prod}

# Development specific settings (when profile is 'dev')
#---
#spring.config.activate.on-profile=dev
#server.servlet.session.cookie.secure=false
#server.servlet.session.cookie.same-site=strict
#app.security.cors.allowed-origins=http://localhost:8080,http://127.0.0.1:8080
#app.cloudflare.enabled=false
#logging.level.quest.gekko.wallet=DEBUG

# Production specific settings (when profile is 'prod')
#---
#spring.config.activate.on-profile=prod
#server.servlet.session.cookie.secure=true
#server.servlet.session.cookie.same-site=lax
# Enable debug for troubleshooting in production if needed
#logging.level.quest.gekko.wallet.common.email.service.EmailService=DEBUG

# Render specific environment detection
#---
#spring.config.activate.on-profile=render
#server.servlet.session.cookie.secure=true
#server.servlet.session.cookie.same-site=lax
#app.cloudflare.enabled=true