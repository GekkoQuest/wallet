# Application Configuration
spring.application.name=wallet

# MongoDB Configuration
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
spring.data.mongodb.auto-index-creation=true

# Mail Configuration
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Enhanced Session Configuration
server.servlet.session.timeout=${SESSION_TIMEOUT:30m}
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=${SESSION_COOKIE_SECURE:true}
server.servlet.session.cookie.same-site=strict
server.servlet.session.cookie.max-age=1800
server.servlet.session.tracking-modes=cookie

# Security Configuration
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# Scheduled Tasks Configuration
spring.task.scheduling.pool.size=${SPRING_TASK_SCHEDULING_POOL_SIZE:2}
spring.task.scheduling.thread-name-prefix=wallet-scheduler-

# Application Settings (Custom Properties)
app.name=${APP_NAME:Wallet}
app.support.email=${APP_SUPPORT_EMAIL:john@gekko.quest}

# Verification Code Settings
app.verification.code.length=${VERIFICATION_CODE_LENGTH:6}
app.verification.code.expiry.minutes=${VERIFICATION_CODE_EXPIRY_MINUTES:10}
app.verification.max-attempts=${VERIFICATION_MAX_ATTEMPTS:5}

# Rate Limiting Configuration
app.security.rate-limit.email-send.per-hour=${RATE_LIMIT_EMAIL_HOUR:10}
app.security.rate-limit.email-send.per-minute=${RATE_LIMIT_EMAIL_MINUTE:3}
app.security.rate-limit.code-verify.per-hour=${RATE_LIMIT_VERIFY_HOUR:20}
app.security.rate-limit.code-verify.per-minute=${RATE_LIMIT_VERIFY_MINUTE:5}

# Session Security Settings
app.security.session.max-age-hours=${SESSION_MAX_AGE_HOURS:24}
app.security.session.max-concurrent=${SESSION_MAX_CONCURRENT:3}

# Password Vault Settings
app.vault.max-passwords-per-user=${VAULT_MAX_PASSWORDS:1000}
app.vault.max-password-name-length=${VAULT_MAX_NAME_LENGTH:100}

# Audit and Security Settings
app.security.audit.enabled=${SECURITY_AUDIT_ENABLED:true}
app.security.failed-attempts.max=${MAX_FAILED_ATTEMPTS:5}
app.security.account-lock.duration-minutes=${ACCOUNT_LOCK_DURATION:30}

# CORS Configuration for your domain
app.security.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://wallet.gekko.quest,http://localhost:8080}
app.security.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST}
app.security.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
app.security.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# Email Settings
app.email.verification.template.enabled=${EMAIL_TEMPLATE_ENABLED:true}

# Logging Configuration
logging.level.quest.gekko.wallet=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:WARN}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.org.mongodb.driver=${LOG_LEVEL_MONGODB:WARN}

# Console Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File Logging Configuration
logging.file.name=${LOG_FILE_PATH:logs/secure-wallet.log}
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Server Configuration
server.port=${SERVER_PORT:8080}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Jackson Configuration (for JSON security)
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.default-property-inclusion=non_null

# Cache Configuration for Static Resources
spring.web.resources.cache.cachecontrol.max-age=${STATIC_CACHE_MAX_AGE:86400}
spring.web.resources.cache.cachecontrol.cache-public=true

# Development Profile Settings (uncomment for local development)
# spring.profiles.active=dev
# app.security.cors.allowed-origins=http://localhost:8080
# server.servlet.session.cookie.secure=false